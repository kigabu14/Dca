import streamlit as st
from get_financials import get_financials
from evaluate_dca import calculate_dca_score
import pandas as pd

# UI config
st.set_page_config(page_title="DCA Investment Analyzer", layout="wide")
st.title("üìà DCA Investment Analyzer")
st.markdown("‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å Warren Buffett + DCA ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥")

# ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô
tickers_input = st.text_input(
    "‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå (‡πÄ‡∏ä‡πà‡∏ô AAPL, MSFT, NVDA, SPY)", 
    value="AAPL, MSFT, NVDA"
)

if st.button("‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏•‡∏¢ üöÄ"):
    tickers = [t.strip().upper() for t in tickers_input.split(",") if t.strip()]

    all_results = []

    with st.spinner("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå..."):
        for t in tickers:
            data = get_financials(t)
            if data:
                result = calculate_dca_score(data)
                all_results.append(result)
            else:
                st.warning(f"‚ö†Ô∏è ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á {t} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

    if all_results:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        df = pd.DataFrame([
            {
                "Ticker": r['ticker'],
                "DCA Score": r['score'],
                "‡∏™‡∏£‡∏∏‡∏õ": "‚úÖ ‡∏ô‡πà‡∏≤‡∏•‡∏á‡∏ó‡∏∏‡∏ô" if r['score'] >= 70 else "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô",
                "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î": "\n".join(r['reasons'])
            } for r in all_results
        ])

        st.success("‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
        st.dataframe(df, use_container_width=True)

        # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ‡∏™‡πà‡∏á PDF ‡∏ï‡πà‡∏≠
        st.session_state['dca_results'] = all_results
